Classfile /home/tibo/Workspace/InvalidCodeBlog/build/classes/main/com/invalidcodeexception/experiment/loops/LoopTester$LoopingStrategy.class
  Last modified 12/12/2012; size 2360 bytes
  MD5 checksum ff14feb0106d12be5ed7e6daf1672219
  Compiled from "LoopTester.java"
public abstract class com.invalidcodeexception.experiment.loops.LoopTester$LoopingStrategy extends java.lang.Enum<com.invalidcodeexception.experiment.loops.LoopTester$LoopingStrategy>
  Signature: #65                          // Ljava/lang/Enum<Lcom/invalidcodeexception/experiment/loops/LoopTester$LoopingStrategy;>;
  SourceFile: "LoopTester.java"
  InnerClasses:
       public static abstract #29= #5 of #72; //LoopingStrategy=class com/invalidcodeexception/experiment/loops/LoopTester$LoopingStrategy of class com/invalidcodeexception/experiment/loops/LoopTester
       static #24; //class com/invalidcodeexception/experiment/loops/LoopTester$LoopingStrategy$5
       static #20; //class com/invalidcodeexception/experiment/loops/LoopTester$LoopingStrategy$4
       static #16; //class com/invalidcodeexception/experiment/loops/LoopTester$LoopingStrategy$3
       static #12; //class com/invalidcodeexception/experiment/loops/LoopTester$LoopingStrategy$2
       static #8; //class com/invalidcodeexception/experiment/loops/LoopTester$LoopingStrategy$1
       static #57 of #72; //class com/invalidcodeexception/experiment/loops/LoopTester$1 of class com/invalidcodeexception/experiment/loops/LoopTester
  minor version: 0
  major version: 51
  flags: ACC_PUBLIC, ACC_SUPER, ACC_ABSTRACT, ACC_ENUM
Constant pool:
   #1 = Methodref          #5.#68         //  com/invalidcodeexception/experiment/loops/LoopTester$LoopingStrategy."<init>":(Ljava/lang/String;I)V
   #2 = Fieldref           #5.#69         //  com/invalidcodeexception/experiment/loops/LoopTester$LoopingStrategy.$VALUES:[Lcom/invalidcodeexception/experiment/loops/LoopTester$LoopingStrategy;
   #3 = Methodref          #70.#71        //  "[Lcom/invalidcodeexception/experiment/loops/LoopTester$LoopingStrategy;".clone:()Ljava/lang/Object;
   #4 = Class              #39            //  "[Lcom/invalidcodeexception/experiment/loops/LoopTester$LoopingStrategy;"
   #5 = Class              #73            //  com/invalidcodeexception/experiment/loops/LoopTester$LoopingStrategy
   #6 = Methodref          #28.#74        //  java/lang/Enum.valueOf:(Ljava/lang/Class;Ljava/lang/String;)Ljava/lang/Enum;
   #7 = Methodref          #28.#75        //  java/lang/Enum."<init>":(Ljava/lang/String;I)V
   #8 = Class              #76            //  com/invalidcodeexception/experiment/loops/LoopTester$LoopingStrategy$1
   #9 = String             #32            //  WHILEITER
  #10 = Methodref          #8.#68         //  com/invalidcodeexception/experiment/loops/LoopTester$LoopingStrategy$1."<init>":(Ljava/lang/String;I)V
  #11 = Fieldref           #5.#77         //  com/invalidcodeexception/experiment/loops/LoopTester$LoopingStrategy.WHILEITER:Lcom/invalidcodeexception/experiment/loops/LoopTester$LoopingStrategy;
  #12 = Class              #78            //  com/invalidcodeexception/experiment/loops/LoopTester$LoopingStrategy$2
  #13 = String             #34            //  FORITER
  #14 = Methodref          #12.#68        //  com/invalidcodeexception/experiment/loops/LoopTester$LoopingStrategy$2."<init>":(Ljava/lang/String;I)V
  #15 = Fieldref           #5.#79         //  com/invalidcodeexception/experiment/loops/LoopTester$LoopingStrategy.FORITER:Lcom/invalidcodeexception/experiment/loops/LoopTester$LoopingStrategy;
  #16 = Class              #80            //  com/invalidcodeexception/experiment/loops/LoopTester$LoopingStrategy$3
  #17 = String             #35            //  FOREACH
  #18 = Methodref          #16.#68        //  com/invalidcodeexception/experiment/loops/LoopTester$LoopingStrategy$3."<init>":(Ljava/lang/String;I)V
  #19 = Fieldref           #5.#81         //  com/invalidcodeexception/experiment/loops/LoopTester$LoopingStrategy.FOREACH:Lcom/invalidcodeexception/experiment/loops/LoopTester$LoopingStrategy;
  #20 = Class              #82            //  com/invalidcodeexception/experiment/loops/LoopTester$LoopingStrategy$4
  #21 = String             #36            //  WHILE
  #22 = Methodref          #20.#68        //  com/invalidcodeexception/experiment/loops/LoopTester$LoopingStrategy$4."<init>":(Ljava/lang/String;I)V
  #23 = Fieldref           #5.#83         //  com/invalidcodeexception/experiment/loops/LoopTester$LoopingStrategy.WHILE:Lcom/invalidcodeexception/experiment/loops/LoopTester$LoopingStrategy;
  #24 = Class              #84            //  com/invalidcodeexception/experiment/loops/LoopTester$LoopingStrategy$5
  #25 = String             #37            //  FOR
  #26 = Methodref          #24.#68        //  com/invalidcodeexception/experiment/loops/LoopTester$LoopingStrategy$5."<init>":(Ljava/lang/String;I)V
  #27 = Fieldref           #5.#85         //  com/invalidcodeexception/experiment/loops/LoopTester$LoopingStrategy.FOR:Lcom/invalidcodeexception/experiment/loops/LoopTester$LoopingStrategy;
  #28 = Class              #86            //  java/lang/Enum
  #29 = Utf8               LoopingStrategy
  #30 = Utf8               InnerClasses
  #31 = Utf8               
  #32 = Utf8               WHILEITER
  #33 = Utf8               Lcom/invalidcodeexception/experiment/loops/LoopTester$LoopingStrategy;
  #34 = Utf8               FORITER
  #35 = Utf8               FOREACH
  #36 = Utf8               WHILE
  #37 = Utf8               FOR
  #38 = Utf8               $VALUES
  #39 = Utf8               [Lcom/invalidcodeexception/experiment/loops/LoopTester$LoopingStrategy;
  #40 = Utf8               values
  #41 = Utf8               ()[Lcom/invalidcodeexception/experiment/loops/LoopTester$LoopingStrategy;
  #42 = Utf8               Code
  #43 = Utf8               LineNumberTable
  #44 = Utf8               valueOf
  #45 = Utf8               (Ljava/lang/String;)Lcom/invalidcodeexception/experiment/loops/LoopTester$LoopingStrategy;
  #46 = Utf8               LocalVariableTable
  #47 = Utf8               name
  #48 = Utf8               Ljava/lang/String;
  #49 = Utf8               <init>
  #50 = Utf8               (Ljava/lang/String;I)V
  #51 = Utf8               this
  #52 = Utf8               Signature
  #53 = Utf8               ()V
  #54 = Utf8               compute
  #55 = Utf8               (Ljava/util/List;)I
  #56 = Utf8               (Ljava/util/List<Ljava/lang/Integer;>;)I
  #57 = Class              #87            //  com/invalidcodeexception/experiment/loops/LoopTester$1
  #58 = Utf8               (Ljava/lang/String;ILcom/invalidcodeexception/experiment/loops/LoopTester$1;)V
  #59 = Utf8               x0
  #60 = Utf8               x1
  #61 = Utf8               I
  #62 = Utf8               x2
  #63 = Utf8               Lcom/invalidcodeexception/experiment/loops/LoopTester$1;
  #64 = Utf8               <clinit>
  #65 = Utf8               Ljava/lang/Enum<Lcom/invalidcodeexception/experiment/loops/LoopTester$LoopingStrategy;>;
  #66 = Utf8               SourceFile
  #67 = Utf8               LoopTester.java
  #68 = NameAndType        #49:#50        //  "<init>":(Ljava/lang/String;I)V
  #69 = NameAndType        #38:#39        //  $VALUES:[Lcom/invalidcodeexception/experiment/loops/LoopTester$LoopingStrategy;
  #70 = Class              #39            //  "[Lcom/invalidcodeexception/experiment/loops/LoopTester$LoopingStrategy;"
  #71 = NameAndType        #88:#89        //  clone:()Ljava/lang/Object;
  #72 = Class              #90            //  com/invalidcodeexception/experiment/loops/LoopTester
  #73 = Utf8               com/invalidcodeexception/experiment/loops/LoopTester$LoopingStrategy
  #74 = NameAndType        #44:#91        //  valueOf:(Ljava/lang/Class;Ljava/lang/String;)Ljava/lang/Enum;
  #75 = NameAndType        #49:#50        //  "<init>":(Ljava/lang/String;I)V
  #76 = Utf8               com/invalidcodeexception/experiment/loops/LoopTester$LoopingStrategy$1
  #77 = NameAndType        #32:#33        //  WHILEITER:Lcom/invalidcodeexception/experiment/loops/LoopTester$LoopingStrategy;
  #78 = Utf8               com/invalidcodeexception/experiment/loops/LoopTester$LoopingStrategy$2
  #79 = NameAndType        #34:#33        //  FORITER:Lcom/invalidcodeexception/experiment/loops/LoopTester$LoopingStrategy;
  #80 = Utf8               com/invalidcodeexception/experiment/loops/LoopTester$LoopingStrategy$3
  #81 = NameAndType        #35:#33        //  FOREACH:Lcom/invalidcodeexception/experiment/loops/LoopTester$LoopingStrategy;
  #82 = Utf8               com/invalidcodeexception/experiment/loops/LoopTester$LoopingStrategy$4
  #83 = NameAndType        #36:#33        //  WHILE:Lcom/invalidcodeexception/experiment/loops/LoopTester$LoopingStrategy;
  #84 = Utf8               com/invalidcodeexception/experiment/loops/LoopTester$LoopingStrategy$5
  #85 = NameAndType        #37:#33        //  FOR:Lcom/invalidcodeexception/experiment/loops/LoopTester$LoopingStrategy;
  #86 = Utf8               java/lang/Enum
  #87 = Utf8               com/invalidcodeexception/experiment/loops/LoopTester$1
  #88 = Utf8               clone
  #89 = Utf8               ()Ljava/lang/Object;
  #90 = Utf8               com/invalidcodeexception/experiment/loops/LoopTester
  #91 = Utf8               (Ljava/lang/Class;Ljava/lang/String;)Ljava/lang/Enum;
{
  public static final com.invalidcodeexception.experiment.loops.LoopTester$LoopingStrategy WHILEITER;
    flags: ACC_PUBLIC, ACC_STATIC, ACC_FINAL, ACC_ENUM

  public static final com.invalidcodeexception.experiment.loops.LoopTester$LoopingStrategy FORITER;
    flags: ACC_PUBLIC, ACC_STATIC, ACC_FINAL, ACC_ENUM

  public static final com.invalidcodeexception.experiment.loops.LoopTester$LoopingStrategy FOREACH;
    flags: ACC_PUBLIC, ACC_STATIC, ACC_FINAL, ACC_ENUM

  public static final com.invalidcodeexception.experiment.loops.LoopTester$LoopingStrategy WHILE;
    flags: ACC_PUBLIC, ACC_STATIC, ACC_FINAL, ACC_ENUM

  public static final com.invalidcodeexception.experiment.loops.LoopTester$LoopingStrategy FOR;
    flags: ACC_PUBLIC, ACC_STATIC, ACC_FINAL, ACC_ENUM

  public static com.invalidcodeexception.experiment.loops.LoopTester$LoopingStrategy[] values();
    flags: ACC_PUBLIC, ACC_STATIC
    Code:
      stack=1, locals=0, args_size=0
         0: getstatic     #2                  // Field $VALUES:[Lcom/invalidcodeexception/experiment/loops/LoopTester$LoopingStrategy;
         3: invokevirtual #3                  // Method "[Lcom/invalidcodeexception/experiment/loops/LoopTester$LoopingStrategy;".clone:()Ljava/lang/Object;
         6: checkcast     #4                  // class "[Lcom/invalidcodeexception/experiment/loops/LoopTester$LoopingStrategy;"
         9: areturn       
      LineNumberTable:
        line 21: 0

  public static com.invalidcodeexception.experiment.loops.LoopTester$LoopingStrategy valueOf(java.lang.String);
    flags: ACC_PUBLIC, ACC_STATIC
    Code:
      stack=2, locals=1, args_size=1
         0: ldc_w         #5                  // class com/invalidcodeexception/experiment/loops/LoopTester$LoopingStrategy
         3: aload_0       
         4: invokestatic  #6                  // Method java/lang/Enum.valueOf:(Ljava/lang/Class;Ljava/lang/String;)Ljava/lang/Enum;
         7: checkcast     #5                  // class com/invalidcodeexception/experiment/loops/LoopTester$LoopingStrategy
        10: areturn       
      LineNumberTable:
        line 21: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
               0      11     0  name   Ljava/lang/String;

  abstract int compute(java.util.List<java.lang.Integer>);
    flags: ACC_ABSTRACT
    Signature: #56                          // (Ljava/util/List<Ljava/lang/Integer;>;)I

  com.invalidcodeexception.experiment.loops.LoopTester$LoopingStrategy(java.lang.String, int, com.invalidcodeexception.experiment.loops.LoopTester$1);
    flags: ACC_SYNTHETIC
    Code:
      stack=3, locals=4, args_size=4
         0: aload_0       
         1: aload_1       
         2: iload_2       
         3: invokespecial #1                  // Method "<init>":(Ljava/lang/String;I)V
         6: return        
      LineNumberTable:
        line 21: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
               0       7     0  this   Lcom/invalidcodeexception/experiment/loops/LoopTester$LoopingStrategy;
               0       7     1    x0   Ljava/lang/String;
               0       7     2    x1   I
               0       7     3    x2   Lcom/invalidcodeexception/experiment/loops/LoopTester$1;

  static {};
    flags: ACC_STATIC
    Code:
      stack=4, locals=0, args_size=0
         0: new           #8                  // class com/invalidcodeexception/experiment/loops/LoopTester$LoopingStrategy$1
         3: dup           
         4: ldc           #9                  // String WHILEITER
         6: iconst_0      
         7: invokespecial #10                 // Method com/invalidcodeexception/experiment/loops/LoopTester$LoopingStrategy$1."<init>":(Ljava/lang/String;I)V
        10: putstatic     #11                 // Field WHILEITER:Lcom/invalidcodeexception/experiment/loops/LoopTester$LoopingStrategy;
        13: new           #12                 // class com/invalidcodeexception/experiment/loops/LoopTester$LoopingStrategy$2
        16: dup           
        17: ldc           #13                 // String FORITER
        19: iconst_1      
        20: invokespecial #14                 // Method com/invalidcodeexception/experiment/loops/LoopTester$LoopingStrategy$2."<init>":(Ljava/lang/String;I)V
        23: putstatic     #15                 // Field FORITER:Lcom/invalidcodeexception/experiment/loops/LoopTester$LoopingStrategy;
        26: new           #16                 // class com/invalidcodeexception/experiment/loops/LoopTester$LoopingStrategy$3
        29: dup           
        30: ldc           #17                 // String FOREACH
        32: iconst_2      
        33: invokespecial #18                 // Method com/invalidcodeexception/experiment/loops/LoopTester$LoopingStrategy$3."<init>":(Ljava/lang/String;I)V
        36: putstatic     #19                 // Field FOREACH:Lcom/invalidcodeexception/experiment/loops/LoopTester$LoopingStrategy;
        39: new           #20                 // class com/invalidcodeexception/experiment/loops/LoopTester$LoopingStrategy$4
        42: dup           
        43: ldc           #21                 // String WHILE
        45: iconst_3      
        46: invokespecial #22                 // Method com/invalidcodeexception/experiment/loops/LoopTester$LoopingStrategy$4."<init>":(Ljava/lang/String;I)V
        49: putstatic     #23                 // Field WHILE:Lcom/invalidcodeexception/experiment/loops/LoopTester$LoopingStrategy;
        52: new           #24                 // class com/invalidcodeexception/experiment/loops/LoopTester$LoopingStrategy$5
        55: dup           
        56: ldc           #25                 // String FOR
        58: iconst_4      
        59: invokespecial #26                 // Method com/invalidcodeexception/experiment/loops/LoopTester$LoopingStrategy$5."<init>":(Ljava/lang/String;I)V
        62: putstatic     #27                 // Field FOR:Lcom/invalidcodeexception/experiment/loops/LoopTester$LoopingStrategy;
        65: iconst_5      
        66: anewarray     #5                  // class com/invalidcodeexception/experiment/loops/LoopTester$LoopingStrategy
        69: dup           
        70: iconst_0      
        71: getstatic     #11                 // Field WHILEITER:Lcom/invalidcodeexception/experiment/loops/LoopTester$LoopingStrategy;
        74: aastore       
        75: dup           
        76: iconst_1      
        77: getstatic     #15                 // Field FORITER:Lcom/invalidcodeexception/experiment/loops/LoopTester$LoopingStrategy;
        80: aastore       
        81: dup           
        82: iconst_2      
        83: getstatic     #19                 // Field FOREACH:Lcom/invalidcodeexception/experiment/loops/LoopTester$LoopingStrategy;
        86: aastore       
        87: dup           
        88: iconst_3      
        89: getstatic     #23                 // Field WHILE:Lcom/invalidcodeexception/experiment/loops/LoopTester$LoopingStrategy;
        92: aastore       
        93: dup           
        94: iconst_4      
        95: getstatic     #27                 // Field FOR:Lcom/invalidcodeexception/experiment/loops/LoopTester$LoopingStrategy;
        98: aastore       
        99: putstatic     #2                  // Field $VALUES:[Lcom/invalidcodeexception/experiment/loops/LoopTester$LoopingStrategy;
       102: return        
      LineNumberTable:
        line 23: 0
        line 35: 13
        line 46: 26
        line 56: 39
        line 68: 52
        line 21: 65
}
